.pieContainer {
    height: 150px;
    margin-left: 30px;
    position: relative;
}

.pieBackground {
    position: absolute;
    width: outerRing_Size;
    height: outerRing_Size;
    border-radius: 75px;
    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.5);
    width: 0;
}
outerRing_Size = 150px;
.pie {
   // transition: all 1s;
    position: absolute;
    width: outerRing_Size;
    height: outerRing_Size;
    border-radius: 75px;
    clip: rect(0px, 75px, 150px, 0px);
}

.hold {
    position: absolute;
    width: outerRing_Size;
    height: outerRing_Size;
    border-radius: 75px;
    clip: rect(0px, 150px, 150px, 75px);
}

drawPie(pieColors, slices) {
    i = 2;
    s = 1;
    offset = (slices[0] / 100) * 360;

    if (sum(slices) < 100) {
        lastItem = 100 - sum(slices);
        push(slices, lastItem);
        push(pieColors,#000);
    }

    & :nth-child({i}) {
        & :nth-child(1) {
            background-color: pieColors[0];
            angle = (slices[0] / 100) * 360;
            transform: rotate(angle * 1deg);
        }
    }

    for color in 2 .. length(pieColors) {
        & :nth-child({i + 1}) {
            transform: rotate(offset * 1deg);

            & :nth-child(1) {
                background-color: pieColors[s];
                angle = (slices[s] / 100) * 360;
                transform: rotate(round(angle)*1deg);
            }
        }

        angle = (slices[s] / 100) * 360;
        offset = round(offset + angle);
        i = i + 1;
        s = s + 1;
    }
}

.innerCircle {
    position: absolute;
    width: 120px;
    height: 120px;
    background-color: white;
    border-radius: 60px;
    top: 15px;
    left: 15px;
    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.5) inset;
    color: white;
    
}